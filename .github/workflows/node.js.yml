name: Build, Test, and Deploy to Azure

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  # Job 1: Build
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build --if-present  # Si tienes un proceso de build en tu proyecto

  # Job 2: Test (Este depende del Job de Build)
  test:
    needs: build  # Esto asegura que el test solo se ejecute si el build fue exitoso
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  # Job 3: Deploy (Este depende del Job de Test)
  deploy:
    needs: test  # Esto asegura que el deploy solo ocurra si los tests pasaron
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /path/to/your/project
            git pull origin master
            npm install --production
            npm run build --if-present
            pm2 restart all  # Ajusta esto según cómo gestionas tu servidor
