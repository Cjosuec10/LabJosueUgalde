name: Build, Test, and Deploy to Azure

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  # Job 1: Build
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build --if-present  # Si tienes un proceso de build en tu proyecto

  # Job 2: Test (Este depende del Job de Build)
  test:
    needs: build  # Esto asegura que el test solo se ejecute si el build fue exitoso
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      # Paso adicional: Otorgar permisos a Mocha
      - name: Grant permission to Mocha
        run: chmod +x ./node_modules/.bin/mocha

      - name: Run tests
        run: npm test

 # Job 3: Delivery (Crear y subir imagen Docker a Docker Hub)
  delivery:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/infosec-chat:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/infosec-chat:latest
        
       # Login to Azure
      - name: 'Login to Azure'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy Docker image to Azure Web App
      - name: Deploy Docker image to Azure Web App
        run: |
          az webapp config container set --resource-group YOUR_RESOURCE_GROUP --name YOUR_WEBAPP_NAME --container-image-name ${{ secrets.DOCKER_USERNAME }}/infosec-chat:latest
